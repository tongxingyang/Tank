//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class XQFramework_Resource_ResourcesManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(XQFramework.Resource.ResourcesManager), typeof(System.Object));
		L.RegFunction("Initialize", Initialize);
		L.RegFunction("LoadObject", LoadObject);
		L.RegFunction("LoadScene", LoadScene);
		L.RegFunction("LoadText", LoadText);
		L.RegFunction("LoadTexture", LoadTexture);
		L.RegFunction("LoadPrefab", LoadPrefab);
		L.RegFunction("LoadSprite", LoadSprite);
		L.RegFunction("LoadMaterial", LoadMaterial);
		L.RegFunction("LoadAudioClip", LoadAudioClip);
		L.RegFunction("LoadAllAB", LoadAllAB);
		L.RegFunction("UnLoadAllAssetBundle", UnLoadAllAssetBundle);
		L.RegFunction("New", _CreateXQFramework_Resource_ResourcesManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateXQFramework_Resource_ResourcesManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				XQFramework.Resource.ResourcesManager obj = new XQFramework.Resource.ResourcesManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: XQFramework.Resource.ResourcesManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Initialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
			System.Collections.IEnumerator o = obj.Initialize();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadObject(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.LoadObject(arg0);
				return 0;
			}
			else if (count == 3)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				System.Action<UnityEngine.Object> arg1 = (System.Action<UnityEngine.Object>)ToLua.CheckDelegate<System.Action<UnityEngine.Object>>(L, 3);
				obj.LoadObject(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: XQFramework.Resource.ResourcesManager.LoadObject");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadScene(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.LoadScene(arg0);
				return 0;
			}
			else if (count == 3)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				System.Action<UnityEngine.Object> arg1 = (System.Action<UnityEngine.Object>)ToLua.CheckDelegate<System.Action<UnityEngine.Object>>(L, 3);
				obj.LoadScene(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: XQFramework.Resource.ResourcesManager.LoadScene");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadText(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Action<UnityEngine.Object> arg1 = (System.Action<UnityEngine.Object>)ToLua.CheckDelegate<System.Action<UnityEngine.Object>>(L, 3);
			obj.LoadText(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadTexture(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.LoadTexture(arg0);
				return 0;
			}
			else if (count == 3)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				System.Action<UnityEngine.Texture> arg1 = (System.Action<UnityEngine.Texture>)ToLua.CheckDelegate<System.Action<UnityEngine.Texture>>(L, 3);
				obj.LoadTexture(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: XQFramework.Resource.ResourcesManager.LoadTexture");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadPrefab(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.LoadPrefab(arg0);
				return 0;
			}
			else if (count == 3)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				System.Action<UnityEngine.GameObject> arg1 = (System.Action<UnityEngine.GameObject>)ToLua.CheckDelegate<System.Action<UnityEngine.GameObject>>(L, 3);
				obj.LoadPrefab(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: XQFramework.Resource.ResourcesManager.LoadPrefab");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadSprite(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.LoadSprite(arg0);
				return 0;
			}
			else if (count == 3)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				System.Action<UnityEngine.Sprite> arg1 = (System.Action<UnityEngine.Sprite>)ToLua.CheckDelegate<System.Action<UnityEngine.Sprite>>(L, 3);
				obj.LoadSprite(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: XQFramework.Resource.ResourcesManager.LoadSprite");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadMaterial(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.LoadMaterial(arg0);
				return 0;
			}
			else if (count == 3)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				System.Action<UnityEngine.Material> arg1 = (System.Action<UnityEngine.Material>)ToLua.CheckDelegate<System.Action<UnityEngine.Material>>(L, 3);
				obj.LoadMaterial(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: XQFramework.Resource.ResourcesManager.LoadMaterial");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAudioClip(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.LoadAudioClip(arg0);
				return 0;
			}
			else if (count == 3)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				System.Action<UnityEngine.AudioClip> arg1 = (System.Action<UnityEngine.AudioClip>)ToLua.CheckDelegate<System.Action<UnityEngine.AudioClip>>(L, 3);
				obj.LoadAudioClip(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: XQFramework.Resource.ResourcesManager.LoadAudioClip");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAllAB(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.LoadAllAB(arg0);
				return 0;
			}
			else if (count == 3)
			{
				XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				System.Action<UnityEngine.Object[]> arg1 = (System.Action<UnityEngine.Object[]>)ToLua.CheckDelegate<System.Action<UnityEngine.Object[]>>(L, 3);
				obj.LoadAllAB(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: XQFramework.Resource.ResourcesManager.LoadAllAB");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnLoadAllAssetBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			XQFramework.Resource.ResourcesManager obj = (XQFramework.Resource.ResourcesManager)ToLua.CheckObject<XQFramework.Resource.ResourcesManager>(L, 1);
			obj.UnLoadAllAssetBundle();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, XQFramework.Resource.ResourcesManager.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

