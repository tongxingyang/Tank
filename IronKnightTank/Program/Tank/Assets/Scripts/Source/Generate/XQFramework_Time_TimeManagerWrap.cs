//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class XQFramework_Time_TimeManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(XQFramework.Time.TimeManager), typeof(System.Object));
		L.RegFunction("ChangeScale", ChangeScale);
		L.RegFunction("RegisterAction", RegisterAction);
		L.RegFunction("RemoveAction", RemoveAction);
		L.RegFunction("New", _CreateXQFramework_Time_TimeManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateXQFramework_Time_TimeManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				XQFramework.Time.TimeManager obj = new XQFramework.Time.TimeManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: XQFramework.Time.TimeManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeScale(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			XQFramework.Time.TimeManager obj = (XQFramework.Time.TimeManager)ToLua.CheckObject<XQFramework.Time.TimeManager>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.ChangeScale(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterAction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			XQFramework.Time.TimeManager obj = (XQFramework.Time.TimeManager)ToLua.CheckObject<XQFramework.Time.TimeManager>(L, 1);
			XQFramework.Time.ITimeChangeAction arg0 = (XQFramework.Time.ITimeChangeAction)ToLua.CheckObject<XQFramework.Time.ITimeChangeAction>(L, 2);
			obj.RegisterAction(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			XQFramework.Time.TimeManager obj = (XQFramework.Time.TimeManager)ToLua.CheckObject<XQFramework.Time.TimeManager>(L, 1);
			XQFramework.Time.ITimeChangeAction arg0 = (XQFramework.Time.ITimeChangeAction)ToLua.CheckObject<XQFramework.Time.ITimeChangeAction>(L, 2);
			obj.RemoveAction(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

