---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by JCY.
--- DateTime: 2018/10/16 21:54
---
local TankData = require("Game.Main.Model.Data.TankData")
local RecruitTankData = require("Game.Main.Model.Data.RecruitTankData")
local BattleModel = require("Game.Main.Model.BattleModel")
local TankInfoData = require("Game.Main.Model.Data.TankInfoData")
local SaveModel = require("Game.Main.Model.SaveModel")

---@class TankListModel:ISaveLoad
local TankListModel = {}
local this = TankListModel;

---@type RecruitTankData[] 坦克数据队列
TankListModel.TankList = {};
---@type TankData[] 配置的坦克信息
TankListModel.TankCfg = {};
---@type TankInfoData[] 坦克信息
TankListModel.TankInfoData = {};

---@param info id
function TankListModel.Load(info)
    local configData = JsonDataMgr.GetAllJsonData(DataConst.DataName.TankUnit)
    this.TankList = {}
    this.TankCfg = {};
    if info.RecruitTankData ~= nil then
        for k, v in pairs(info.RecruitTankData) do
            local temp = RecruitTankData.new();
            temp:UpdateInfo(v);
            this.TankList[tonumber(v.TankID)] = temp;
        end
    end
    for k, v in pairs(configData) do
        local temp = TankData.new(v.TankUnit_ID);
        this.TankCfg[tonumber(v.TankUnit_ID)] = temp;
    end
end

function TankListModel.Save()
    SaveModel.SaveData:SetRecruitTankData(this.TankList)
end

---获取玩家坦克的总数
function TankListModel.GetTankListCount()
    local count = 0;
    for k, v in pairs(this.TankList) do
        count = count + v:GetTankCount();
    end
    return count;
end

---@param index 征调的类型
---@param count 征调的数量
---@return boolean
function TankListModel.RecruitTankList(id, count)
    if BattleModel.ReturnTankMaxCount() >= this.GetTankListCount() + count then
        if this.TankList[id] ~= nil then
            count = count + this.TankList[id]:GetTankCount();
            this.TankList[id]:SetTankCount(count)
        else
            local temp = RecruitTankData.new();
            temp:SetTankID(id);
            temp:SetTankCount(count);
            this.TankList[id] = temp;
        end
        return true;
    else
        return false;
    end
end

---@return RecruitTankData[] 获取玩家有的坦克
function TankListModel.GetTankIDCountList()
    return this.TankList;
end

---@return TankInfoData[] 获取玩家有的信息
function TankListModel.TankListInfo()
    for k, v in pairs(this.TankList) do
        if this.TankInfoData[tonumber(v.TankID)] == nil then
            this.TankInfoData[tonumber(v.TankID)] = TankInfoData.new(v.TankID, v.Count);
        else
            this.TankInfoData[tonumber(v.TankID)].Count = v.Count;
        end
    end
    return this.TankInfoData
end

---获取本战役可以拿到的坦克
function TankListModel.GetTankListInfo()
    local returnTemp = {};
    for k, v in pairs(BattleModel.GetRecruitTankList()) do
        local temp = {}
        temp.TankData = TankData.new(v.TankID);
        temp.TankUse = v.TankUse;
        temp.TankMaxCount = v.TankMaxCount;
        table.insert(returnTemp, temp)
    end
    if this.TankList ~= nil then
        for k, v in pairs(returnTemp) do
            if this.TankList[v.TankData.Id] ~= nil then
                v.TankMaxCount = v.TankMaxCount - this.TankList[v.TankData.Id]:GetTankCount();
            end
        end
    end
    return returnTemp
end

function TankListModel.RemoveTank(id, count)
    if this.TankList[id]:GetTankCount() - count > 0 then
        this.TankList[id]:SetTankCount(this.TankList[id]:GetTankCount() - count);
    else
        this.TankList[id] = nil;
    end
end

return TankListModel;