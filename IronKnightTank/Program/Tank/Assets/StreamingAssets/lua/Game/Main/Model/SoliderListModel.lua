---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by JCY.
--- DateTime: 2018/10/16 21:22
---

local RecruitSoliderData = require("Game.Main.Model.Data.RecruitSoliderData")
local RecruitConfig = require("Game.Config.RecruitConfig")
local SaveModel = require("Game.Main.Model.SaveModel")

---@class SoliderListModel:ISaveLoad
local SoliderListModel = {}
local this = SoliderListModel;

---@type RecruitSoliderData[] 招募士兵队列
SoliderListModel.SoliderList = {};
---@type number 招募士兵ID的编号
SoliderListModel.MaxSoliderID = 1000;

--当前存档下的信息
function SoliderListModel.Load(info)
    this.SoliderList = {}
    if info.RecruitSoliderData ~= nil then
        for k, v in pairs(info.RecruitSoliderData) do
            local temp = RecruitSoliderData.new();
            temp:UpdateInfo(v)
            this.SoliderList[v.ID] = temp;
        end
    end
end

function SoliderListModel.Save()
    SaveModel.SaveData:SetRecruitSoliderData(this.SoliderList)
end

--招募新兵并且返回当前招募新兵的队列
function SoliderListModel.RecruitYounSoliderList(count)
    local returnList = {}
    for i = 1, count do
        this.MaxSoliderID = this.GetMaxSoliderID() + 1;
        local temp = RecruitSoliderData.new()
        temp:SetInfo(this.MaxSoliderID, false, RecruitConfig.NewSolider)
        this.SoliderList[this.MaxSoliderID] = temp;
        table.insert(returnList, temp);
    end
    return returnList;
end

function SoliderListModel.GetMaxSoliderID()
    for k, v in pairs(this.SoliderList) do
        if v.ID > this.MaxSoliderID then
            this.MaxSoliderID = v.ID;
        end
    end
    return this.MaxSoliderID;
end

--招募老兵并且返回当前招募老兵的队列
function SoliderListModel.RecruitExpSoliderList(count)
    local returnList = {}
    for i = 1, count do
        this.MaxSoliderID = this.GetMaxSoliderID() + 1;
        local temp = RecruitSoliderData.new()
        temp:SetInfo(this.MaxSoliderID, true, RecruitConfig.OldSolider)
        this.SoliderList[this.MaxSoliderID] = temp;
        table.insert(returnList, temp);
    end
    return returnList;
end

--获取玩家有的兵
function SoliderListModel.GetSoliderList()
    local returnTemp = {}
    for k, v in pairs(this.SoliderList) do
        table.insert(returnTemp, v);
    end
    return returnTemp;
end

function SoliderListModel.RemoveSolider(id)
    this.SoliderList[id] = nil;
end

function SoliderListModel.SetSoliderBindTankID(soliderID, tankID)
    this.SoliderList[soliderID]:SetBindTankID(tankID);
end

--获取玩家有的兵数
function SoliderListModel.GetSoliderListCount()
    local count = 0;
    for k, v in pairs(this.SoliderList) do
        count = count + 1;
    end
    return count;
end

return SoliderListModel;