---
--- 游戏获取数据的入口，都从这里获取
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by JCY.
--- DateTime: 2018/10/12 14:15
---

local PlayerDataModel = require("Game.Main.Model.PlayerDataModel")
local SettingModel = require("Game.Main.Model.SettingModel")
local SaveModel = require("Game.Main.Model.SaveModel")
local BattleModel = require("Game.Main.Model.BattleModel")
local TeamModel = require("Game.Main.Model.TeamModel")
local SoliderListModel = require("Game.Main.Model.SoliderListModel")
local TankListModel = require("Game.Main.Model.TankListModel")

---@class DataMgr
DataMgr = {};
local this = DataMgr;
DataMgr.Model = {}

--玩家第一次启用游戏
function DataMgr.Init()
    local IsHaveSave = SaveManager.Instance:IsPlayData(DataConst.SaveName.SaveData);
    if IsHaveSave == false then
        clog("没有存档")
        ---------------------测试-----------------------
        SaveModel.CreatNewSave()
        SaveModel.LoadSave()
        SaveModel.LoadGameSave(-1)
        PlayerDataModel.InitPlayerData("JCY");
        PlayerDataModel:SetRectentPlayTime()

        SettingModel.SetMusicPriority(123)
        SettingModel.SetMusicQuality(24)
        SettingModel.SetCurLanguage(2)
        SettingModel.SetRenderQuality(2)
        --
        BattleModel.AddNewBattle(1)
        BattleModel.ChangeBattleResult(1)
        BattleModel.AddNewBattle(2)
        --
        SoliderListModel.RecruitYounSoliderList(2)
        SoliderListModel.RecruitExpSoliderList(3)
        --
        TankListModel.RecruitTankList(1101, 2)
        TankListModel.RecruitTankList(1102, 4)
        --
        --TeamModel.SetNewTeam(1002, 1002)
        --
        this.SaveData(1, "存档1")
        this.SaveData(2, "存档2")
        -----------------------测试-----------------------
        this.SaveAutoData()

    else
        clog("有存档")
        SaveModel.Load()
        SaveModel.LoadGameSave(-1)
        ---------------------测试-----------------------
        clog(PlayerDataModel.GetPlayerName())
        clog(DataMgr.GetHaveTankListCount())

        --this.LoadSaveAutoData()
        --SettingModel.SetMusicPriority(12333)
        --this.SaveData(1, "存档1")
        ---------------------测试-----------------------
    end
end

-----------------------------------------------------读取存档-----------------------------------------------------------
---游戏读取存档功能
function DataMgr.Load()
    SaveModel.Load()
end

---根据存档ID进行读取存档
---@param id 存档的ID
function DataMgr.LoadSaveByID(id)
    SaveModel.LoadSaveByID(id)
end

---读取保存的自动存档
function DataMgr.LoadSaveAutoData()
    SaveModel.LoadAutoSave()
end

---保存自动存档
function DataMgr.SaveAutoData()
    SaveModel.SaveAutoData()
end

---保存手动存档
---@param id 存档的ID
---@param name 对应的名字
function DataMgr.SaveData(id, name)
    SaveModel.Save(id, saveName)
end
------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------战役-----------------------------------------------------------
---@return BattleModel 读取战役的数据
function DataMgr.GetSaveBattleData()
    return BattleModel.GetSaveBattleData();
end

---@return BattleModel 读取配置战役的数据的数据
function DataMgr.GetAllConfigBattleData()
    return BattleModel.GetAllConfigBattleData();
end

function DataMgr.ChangeBattleResult(IsComplete)
    BattleModel.ChangeBattleResult(IsComplete);
end

function DataMgr.AddNewBattle(id)
    BattleModel.AddNewBattle(id)
end

---@return BattleModel 获取相应的战场配置信息
function DataMgr.GetConfigBattleDataByID(id)
    return BattleModel.GetConfigBattleDataByID(id)
end
------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------招募-----------------------------------------------------------
---@return SoliderListModel 招募年轻士兵
function DataMgr.RecruitYounSoliderList(count)
    return SoliderListModel.RecruitYounSoliderList(count);
end

---@return SoliderListModel 招募老兵
function DataMgr.RecruitExpSoliderList(count)
    return SoliderListModel.RecruitExpSoliderList(count);
end

---@return TankListModel 招募坦克
function DataMgr.RecruitTankList(id, count)
    return TankListModel.RecruitTankList(id, count)
end

---@return BattleModel 返回士兵最大值
function DataMgr.ReturnSoliderMaxCount()
    return BattleModel.ReturnSoliderMaxCount();
end

---@return BattleModel 返回坦克最大值
function DataMgr.ReturnTankMaxCount ()
    return BattleModel.ReturnTankMaxCount();
end

---@return SoliderListModel 获取拥有的士兵列表
function DataMgr.GetHaveSoliderList()
    return SoliderListModel.GetSoliderList()
end

---@return TankListModel 获取拥有的坦克列表
function DataMgr.GetHaveTankList()
    return TankListModel.GetTankList()
end

---@return TankListModel 获取拥有的坦克列表详细信息
--function DataMgr.GetHaveTankListInfo()
--    return TankListModel.GetHaveTankListInfo()
--end

---@return SoliderListModel 获取拥有的士兵列表
function DataMgr.GetHaveSoliderListCount()
    return SoliderListModel.GetSoliderListCount();
end

---@return TankListModel 获取拥有的坦克数量
function DataMgr.GetHaveTankListCount()
    return TankListModel.GetTankListCount();
end

---@return TankListModel 获取本战役可以获取的坦克
function DataMgr.GetTankListInfo()
    return TankListModel.GetTankListInfo()
end

---@return RecruitTankData[] 获取玩家有的坦克对应的数量
function DataMgr.GetTankIDCountList()
    return TankListModel.GetTankIDCountList()
end

---返回详细信息
function DataMgr.TankListInfo()
    return TankListModel.TankListInfo()
end
------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------编队-------------------------------------------------------------
---@return TeamModel 获取已经编队信息
function DataMgr.GetBattleTeamInfo()
    return TeamModel.GetBattleTeamInfo();
end

---@return TeamModel 返回未编组的士兵列表
function DataMgr.GetNoTeamSoliderList()
    TeamModel.GetNoTeamSoliderList()
end

---@return TeamModel 返回未编组的坦克列表
function DataMgr.GetNoTeamSoliderList()
    TeamModel.GetNoTeamTankList()
end
-------------------------------------------------------战斗-------------------------------------------------------------
--删除死亡士兵
function DataMgr.RemoveSolider(id)
    SoliderListModel.RemoveSolider(id)
end

-- 删除死亡士兵
function DataMgr.RemoveSolider(id)
    TankListModel.RemoveTank(id)
end

-----------------------------------------------------------加载---------------------------------------------------------
function DataMgr.LoadSave()

end
------------------------------------------------------------------------------------------------------------------------
----进入游戏,之前方法判断是否使用这个方法
-----@param id 存档的ID，-1为自动存档
--function DataMgr.InGame(id)
--    this.CurrData = SaveModel.GetSave(id)
--    for k, v in pairs(this.CurrData.BattleData) do
--        BattleModel.SetSaveValue(v.ID, v.IsComplete);
--        if v.IsComplete == false then
--            this.BattleID = v.ID;
--        end
--    end
--    for k, v in pairs(JsonDataMgr.GetAllJsonData(DataConst.DataName.Battle)) do
--        BattleModel.SetConfigValue(v.ID);
--        RecruitModel.SetValue(v);
--    end
--    TeamModel.SetValue(this.CurrData.BattleTeam, this.BattleID);
--end

------------------------------------------------------------------------------------------------------------------------
return DataMgr;